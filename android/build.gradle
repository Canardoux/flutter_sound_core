
buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.6.0'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.0"
   }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.android.library'
//apply plugin: 'maven'


rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}


//android.libraryVariants.all {
//    def aptOutputDir = new File(buildDir, "generated/source/apt/${it.unitTestVariant.dirName}")
//    it.unitTestVariant.addJavaSourceFoldersToModel(aptOutputDir)
//}


task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.sourceFiles
}

//task sourceJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    //classifier "sources"
//}



//plugins {
//    id 'java'
//    id 'maven-publish'
//}

//task sourceJar(type: Jar) {
//  from sourceSets.main.allJava
//  archiveClassifier = "sources"
//}


//plugins {
//    id 'com.android.library'
//    id 'maven-publish'
//}



//def properties = new Properties()
//properties.load(new FileInputStream("local2.properties"))

  apply plugin: 'signing'
    signing {
        sign configurations.archives
    }

signing {
    required { false }
    //sign publishing.publications.main
}

//task publishMavenPublicationToMavenLocal {
    //inputFile.from(jar)
//}

//signing {
//    def signingKey =  properties.getProperty("signing.keyId")
//    def signingPassword = properties.getProperty("signing.password")
//    def secretKeyRingFile = properties.getProperty("signing.secretKeyRingFile")
//    //useInMemoryPgpKeys(signingKey, signingPassword)
//    //sign stuffZip
//}

//group = 'com.github.canardoux'

//apply plugin: 'com.github.dcendents.android-maven'
group='com.github.canardoux'

  tasks.withType(JavaCompile).configureEach {
    javaCompiler = javaToolchains.compilerFor {
      languageVersion = JavaLanguageVersion.of(17)
    }
  }


android {
    compileSdkVersion 35
    compileSdk = 35
    compileSdkVersion = 35
    buildToolsVersion "35.0.0"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 35
        versionCode 19161
        versionName '9.16.1'
        compileSdkVersion = 35
        namespace("com.github.canardoux")

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    lint {
          baseline = file("lint-baseline.xml")
    }
    publishing {
      singleVariant("release") {
      withSourcesJar()
    }
  }


}

dependencies {
    implementation 'androidx.core:core:1.3.2'
    implementation 'androidx.media:media:1.4.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.github.jitpack:android-example:1.0.1'
    //classpath "com.android.tools.build:gradle:8.6.0"
}
ext {
    PUBLISH_GROUP_ID = 'com.github.canardoux'
    PUBLISH_ARTIFACT_ID = 'flutter_sound_core'
    PUBLISH_VERSION = android.defaultConfig.versionName // '0.0.2' // project.getProperty(“libraryVersion”)
}



// ==========================================================================================================================================================

//task androidSourcesJar(type: Jar) {
//    archiveClassifier = 'sources'
//    from android.sourceSets.main.java.source
//}

//artifacts {
//    archives androidSourcesJar
//}

apply plugin: 'maven-publish'
apply plugin: 'signing'

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION


//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    destinationDir = file("../javadoc/")
//    failOnError false
//}

//task javadocJar(type: Jar, dependsOn: javadoc) {
//   archiveClassifier = 'javadoc'
//   from javadoc.destinationDir
//}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId PUBLISH_GROUP_ID
                artifactId 'flutter_sound_core'
                version PUBLISH_VERSION
                //artifact(sourceJar)
                //artifact("$buildDir/outputs/aar/flutter_sound_core-release.aar")

            }
        }
    }
}

// =========================================================================================================================================================
//publishing {
//    publications {
//            maven2(MavenPublication) {
//                ///from components.release
//                version = PUBLISH_VERSION
//                artifactId = "flutter_sound_core"
//                groupId = PUBLISH_GROUP_ID
//                //artifact(sourceJar)
//                artifact("$buildDir/outputs/aar/flutter_sound_core-release.aar")
//                afterEvaluate {
//                    from components.release
//                }
//            }
    
        //flutter_sound_core(MavenPublication) {
        //    //artifact sourcesJar
        //        //from components.findByName('release')
        //        //from components.java
        //        //artifact sourceJar

        //    groupId = PUBLISH_GROUP_ID
        //    artifactId = 'flutter_sound_core'
        //    version = PUBLISH_VERSION
        //    artifact("$buildDir/outputs/aar/flutter_sound_core-release.aar")
        //       //afterEvaluate {
        //        //    from components.release
        //        //}            
        //}
//    }
//}

//afterEvaluate {
//    publishing {
//        publications {
//            // Creates a Maven publication called "release".
//            pluginMaven(MavenPublication) {
//                //from components.findByName('release')
//                groupId = PUBLISH_GROUP_ID
//                artifactId = 'flutter_sound_core'
//                version = PUBLISH_VERSION
//                //afterEvaluate {
//                //    from components.release
//                //}            
//            }
//        }
//    }
//}



//afterEvaluate {
//    publishing {
//        publications {
//            // Creates a Maven publication called "release".
//            release(MavenPublication) {
//                from components.findByName('release')
//                groupId = PUBLISH_GROUP_ID
//                artifactId = 'flutter_sound_core'
//                version = PUBLISH_VERSION
//            }

//                        // Creates a Maven publication called “debug”.
//            debug(MavenPublication) {
//                // Applies the component for the debug build variant.
//                from components.findByName('debug')

//                groupId = PUBLISH_GROUP_ID
//                artifactId = 'flutter_sound_core'
//                version = PUBLISH_VERSION
//            }
//
//        }
//    }
//}



//signing {
//    sign publishing.publications
//}
