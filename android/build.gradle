

buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()

    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.0"
   }
}


rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
}

//def properties = new Properties()
//properties.load(new FileInputStream("local2.properties"))

  apply plugin: 'signing'
    signing {
        sign configurations.archives
    }

signing {
    required { false }
    //sign publishing.publications.main
}


//signing {
//    def signingKey =  properties.getProperty("signing.keyId")
//    def signingPassword = properties.getProperty("signing.password")
//    def secretKeyRingFile = properties.getProperty("signing.secretKeyRingFile")
//    //useInMemoryPgpKeys(signingKey, signingPassword)
//    //sign stuffZip
//}

apply plugin: 'com.android.library'
//apply plugin: 'maven-publish'
//apply plugin: 'maven'
//group = 'com.github.canardoux'

//apply plugin: 'com.github.dcendents.android-maven'
group='com.github.Canardoux'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 30
        versionCode 1784
        versionName '7.8.4'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation 'androidx.core:core:1.3.2'
    implementation 'androidx.media:media:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
}
ext {
    PUBLISH_GROUP_ID = 'com.github.Canardoux'
    PUBLISH_ARTIFACT_ID = 'tau_core'
    PUBLISH_VERSION = android.defaultConfig.versionName // '0.0.2' // project.getProperty(“libraryVersion”)
}




// ==========================================================================================================================================================

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.source
}

artifacts {
    archives androidSourcesJar
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION


task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../javadoc/")
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
   classifier = 'javadoc'
   from javadoc.destinationDir
}


// =========================================================================================================================================================


afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = PUBLISH_GROUP_ID
                artifactId = 'tau_core'
                version = PUBLISH_VERSION
            }

                        // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = PUBLISH_GROUP_ID
                artifactId = 'tau_core'
                version = PUBLISH_VERSION
            }

        }
    }
}



//signing {
//    sign publishing.publications
//}
